max v2;#N vpatcher 14 42 708 497;#N vpatcher 26 48 565 521;#P message 351 284 62 196617 read;#P message 335 268 65 196617 write;#P comment 237 270 63 196617 file I/O:;#P message 278 306 62 196617 read killthis;#P message 261 287 65 196617 write killthis;#P message 223 221 41 196617 store 1;#P comment 267 186 241 196617 puts list of elements starting at col. 0 in edit buffer;#P comment 267 222 119 196617 copy editbuffer to row 2;#P comment 267 204 185 196617 output row 2 (and copy it to editbuffer);#P message 221 203 43 196617 recall 1;#P message 139 185 125 196617 put 0 100 3.14159 shupsh;#P comment 121 169 119 196617 edit buffer manipulation:;#P newex 139 257 55 196617 s toPbanks;#P message 151 412 60 196617;#P message 151 392 35 196617 set \$3;#P newex 47 368 114 196617 route 0 1;#P newex 47 334 51 196617 pbank 3 5;#P flonum 47 412 46 9 0 0 0 3;#P number 99 412 45 9 0 0 0 3;#P message 368 412 64 196617;#P message 368 390 35 196617 set \$1;#P comment 45 433 365 196617 note: output order for receives is n-name \, (n-1)-name \, (n-2)-name .... 0-name;#P comment 434 369 76 196617 (first receive to be updated);#P newex 47 291 55 196617 r toPbanks;#P newex 368 368 65 196617 r 2-wireless;#P newex 295 389 65 196617 r 1-wireless;#P newex 223 389 65 196617 r 0-wireless;#P flonum 223 412 58 9 0 0 0 3;#P number 295 412 59 9 0 0 0 3;#P newex 261 340 105 196617 pbank 3 5 "" wireless;#P message 131 122 31 196617 clear;#P newex 27 172 55 196617 s toPbanks;#P message 27 32 135 196617 set 1 2 100 3.14159 shupsh;#P comment 165 33 225 196617 set list of elements starting at colum 1 in row 2;#P comment 165 105 145 196617 read value at colum 0 of row 0;#P message 139 104 23 196617 2 0;#P comment 165 87 202 196617 write symbol "coptox" in colum 2 of row 0;#P message 107 86 55 196617 2 0 coptox;#P comment 165 69 145 196617 read value at colum 0 of row 0;#P comment 165 51 155 196617 write 1.234 to colum 0 of row 1;#P message 139 68 23 196617 0 1;#P message 109 50 53 196617 0 1 1.234;#P comment 11 16 51 196617 Messages;#P comment 165 123 122 196617 set all matrix places to 0;#P connect 13 0 12 0;#P connect 2 0 12 0;#P connect 3 0 12 0;#P connect 6 0 12 0;#P connect 8 0 12 0;#P connect 11 0 12 0;#P connect 20 0 27 0;#P connect 27 0 28 0;#P connect 28 0 26 0;#P connect 28 1 25 0;#P connect 33 0 31 0;#P connect 34 0 31 0;#P connect 38 0 31 0;#P connect 28 2 29 0;#P connect 29 0 30 0;#P connect 17 0 16 0;#P connect 43 0 14 0;#P connect 42 0 14 0;#P connect 39 0 14 0;#P connect 40 0 14 0;#P connect 20 0 14 0;#P connect 18 0 15 0;#P connect 19 0 23 0;#P connect 23 0 24 0;#P pop;#P newobj 455 125 138 196622 patcher Messages;#P comment 77 269 251 196617 Creates a parameter bank of 44 columns by 100 rows;#P comment 5 34 61 196617 Arugments:;#P comment 410 61 260 196617 note: Do not forget that the this outlet is only used by pbank if argument 4 undefined (omitted) -see arguments;#P comment 5 13 51 196622 pbank;#P comment 364 33 40 196617 Outlets;#P comment 410 33 214 196617 The left-hand outlet outputs lists of the form: columnNo <int> item <int \, float or symbol>;#P comment 67 34 259 196617 argument1 gives the number of columns (X axis): <int> \; argument2 gives the number of rows (Y axis): <int> \; argument3 is the name of the pbank: <symbol>;#P comment 60 16 275 196617 A 2-dimensional parameter bank for ints \, floats or symbols;#P comment 108 294 360 196617 Creates a parameter bank of 44 columns by 100 rows \, reading in the contents of the file name \, and sharing data with any other pbanks with the same name;#P comment 151 329 360 196617 Creates a named pbank whose output is sent to receives based on the symbol "mysynth". Since there are 44 columns \, pbank will be sending its output to 44 receives each one corresponding to the column number included in its name. This provides an alterative (and faster) way of getting data from a pbank.;#P comment 135 384 340 196617 Creates an unnamed parameter bank of 44 columns by 100 rows \, whose output will be sent to the 44 corresponding receives based on the symbol "mysynth". Note that the argument3 has been set to the empty string: "".;#P newex 5 393 124 196617 pbank 44 100 "" mysynth;#P newex 5 267 69 196617 pbank 44 100;#P comment 409 152 247 196617 note: The structure of pbank includes an additional row that serves as an edit buffer. - see Messages;#P newex 5 344 143 196617 pbank 44 100 pbdata mysynth;#P newex 5 298 101 196617 pbank 44 100 piss;#N vpatcher 29 49 841 674;#P user ezdac~ 33 132 77 165 0;#P comment 9 24 202 196617 Using pbank in a synth/editor configuration;#P comment 9 47 384 196617 Pbank may be used as a component in a DSP configuration for managing parameters. The example below demonstrates an approach:;#P number 203 283 58 9 0 0 0 3;#P button 266 238 15 0;#P message 266 195 32 196617 store;#P newex 226 254 27 196617 0;#P comment 125 155 79 196617 select memory:;#P comment 172 315 85 196617 current memory:;#P newex 60 320 75 196617 s toSynthPbank;#P message 114 295 45 196617 store \$1;#P message 60 295 49 196617 recall \$1;#P button 122 238 15 0;#P message 122 195 34 196617 recall;#P newex 159 254 27 196617 0;#P message 323 89 14 196617 9;#P message 301 89 14 196617 8;#P message 278 89 14 196617 7;#P message 256 89 14 196617 6;#P message 118 89 14 196617 0;#P message 140 89 14 196617 1;#P message 163 89 14 196617 2;#P message 185 89 14 196617 3;#P message 208 89 14 196617 4;#P message 232 89 14 196617 5;#P comment 59 90 54 196617 memorys:;#P number 208 154 28 9 0 0 0 3;#P newex 16 358 75 196617 r toSynthPbank;#P newex 16 380 153 196617 pbank 4 12 pbankhelp.data synth;#P newex 222 413 79 196617 s toSynthPbank;#N vpatcher 350 265 664 525;#P outlet 92 191 15 0;#P message 143 138 50 196617 write \$1;#P message 92 138 50 196617 read \$1;#P inlet 92 38 15 0;#P newex 92 74 112 196617 route open save;#P newex 92 112 38 196617 dialog;#P newex 143 112 38 196617 dialog;#P connect 3 0 2 0;#P connect 2 0 1 0;#P connect 1 0 4 0;#P connect 4 0 6 0;#P connect 5 0 6 0;#P connect 2 1 0 0;#P connect 0 0 5 0;#P pop;#P newobj 222 389 69 196617 patcher fileIO;#P message 280 344 29 196617 save;#P message 222 345 28 196617 open;#P comment 7 438 228 196617 pbank sends parameters to receives based on the symbol "synth" (optional 4th argument to pbank);#P newex 16 531 151 196617 pbank 4 12 pbankhelp.data name;#P message 16 511 113 196617 0 \$1 \, 1 \$1 \, 2 \$1 \, 3 \$1;#P message 192 483 20 196617 11;#P message 143 483 20 196617 10;#P comment 12 488 105 196617 set parameter lables:;#P newex 698 498 52 196617 r 3-synth;#P newex 698 477 52 196617 r 2-synth;#P newex 698 456 52 196617 r 1-synth;#P newex 698 435 52 196617 r 0-synth;#P message 431 456 45 196617 put 1 \$1;#P message 472 498 45 196617 put 3 \$1;#P message 452 477 45 196617 put 2 \$1;#P message 407 435 45 196617 put 0 \$1;#N vpatcher 83 73 803 614;#P newex 286 165 27 196617 f;#P newex 327 137 27 196617 t b f;#P newex 258 322 27 196617 +~;#P flonum 375 176 43 9 0 0 0 3;#P newex 375 230 27 196617 sig~;#P newex 258 227 27 196617 sig~;#P newex 305 287 27 196617 *~;#P newex 305 198 27 196617 * 1.;#P newex 305 227 27 196617 sig~;#P newex 305 256 38 196617 cycle~;#P slider 464 145 15 128 0 1;#P inlet 464 89 15 0;#P comment 465 74 40 196617 volume;#P comment 371 74 32 196617 index;#P flonum 325 177 35 9 0 0 0 3;#P inlet 375 89 15 0;#P inlet 327 89 15 0;#P inlet 258 89 15 0;#P comment 293 74 65 196617 modFQscaler;#P comment 255 74 17 196617 fq;#P flonum 258 120 35 9 0 0 0 3;#P newex 258 434 40 196617 gain1~;#P newex 258 468 29 196617 dac~;#P newex 258 359 38 196617 cycle~;#P newex 464 402 39 196617 * 0.65;#P connect 7 0 4 0;#P connect 4 0 19 0;#P connect 19 0 22 0;#P connect 22 0 1 0;#P connect 1 0 3 0;#P connect 3 0 2 0;#P connect 0 0 3 1;#P connect 18 0 22 1;#P connect 3 0 2 1;#P connect 23 0 24 0;#P connect 4 0 24 0;#P connect 24 0 17 0;#P connect 17 0 16 0;#P connect 16 0 15 0;#P connect 15 0 18 0;#P connect 10 0 17 1;#P connect 20 0 18 1;#P connect 23 1 10 0;#P connect 8 0 23 0;#P connect 9 0 21 0;#P connect 21 0 20 0;#P connect 13 0 14 0;#P connect 14 0 0 0;#P pop;#P newobj 617 533 75 196617 patcher SYNTH;#P newex 407 533 75 196617 s toSynthPbank;#P comment 566 405 21 196617 hz.;#P message 697 206 62 196617 PARAM4;#P message 680 100 35 196617 set \$1;#P newex 680 31 52 196617 r 3-synth;#P newex 697 139 50 196617 r 3-name;#P message 697 162 35 196617 set \$1;#P message 608 207 62 196617 PARAM3;#P message 519 206 62 196617 PARAM2;#P message 421 205 62 196617 PARAM1;#P newex 519 139 50 196617 r 1-name;#P message 519 162 35 196617 set \$1;#P message 608 162 35 196617 set \$1;#P newex 608 139 50 196617 r 2-name;#P message 511 117 35 196617 set \$1;#P message 600 119 35 196617 set \$1;#P message 414 118 35 196617 set \$1;#P newex 421 139 50 196617 r 0-name;#P message 421 162 35 196617 set \$1;#P slider 689 227 46 128 0 1;#P slider 600 227 23 128 0 1;#P newex 511 367 54 196617 scale 0 127 0 20.;#P slider 511 227 23 128 0 1;#P number 593 404 53 9 0 0 0 3;#P flonum 504 402 61 9 0 0 0 3;#P flonum 407 402 69 9 0 0 0 3;#P newex 414 367 75 196617 scale 0 127 50 15000;#P slider 414 227 23 128 0 1;#P flonum 680 401 61 9 0 0 0 3;#P newex 600 367 69 196617 scale 0 127 0 10000;#P newex 600 31 52 196617 r 2-synth;#P newex 511 31 52 196617 r 1-synth;#P newex 414 31 52 196617 r 0-synth;#P message 593 59 35 196617 set \$1;#P message 504 59 35 196617 set \$1;#P message 407 59 35 196617 set \$1;#P newex 600 83 67 196617 scale 0 10000 0 127;#P newex 414 82 71 196617 scale 50 15000 0 127.;#P newex 511 81 56 196617 scale 0 20 0 127.;#P comment 477 405 21 196617 hz.;#P connect 60 0 59 0;#P connect 50 0 52 0;#P connect 51 0 52 0;#P connect 52 0 53 0;#P connect 73 0 76 0;#P connect 76 0 78 0;#P connect 77 0 78 0;#P connect 81 0 77 0;#P connect 74 0 75 0;#P connect 75 0 73 0;#P connect 61 0 73 1;#P connect 73 0 84 0;#P connect 63 0 61 0;#P connect 64 0 61 0;#P connect 66 0 61 0;#P connect 65 0 61 0;#P connect 67 0 61 0;#P connect 68 0 61 0;#P connect 69 0 61 0;#P connect 71 0 61 0;#P connect 70 0 61 0;#P connect 72 0 61 0;#P connect 55 0 57 0;#P connect 56 0 57 0;#P connect 57 0 58 0;#P connect 83 0 81 0;#P connect 61 0 81 1;#P connect 82 0 83 0;#P connect 7 0 4 0;#P connect 4 0 14 0;#P connect 13 0 14 0;#P connect 14 0 41 0;#P connect 41 0 39 0;#P connect 42 0 39 0;#P connect 43 0 39 0;#P connect 44 0 39 0;#P connect 7 0 2 0;#P connect 2 0 23 0;#P connect 23 0 12 0;#P connect 12 0 13 0;#P connect 22 0 21 0;#P connect 21 0 30 0;#P connect 15 0 44 0;#P connect 16 0 42 0;#P connect 11 0 43 0;#P connect 8 0 5 0;#P connect 5 0 15 0;#P connect 18 0 15 0;#P connect 8 0 1 0;#P connect 1 0 25 0;#P connect 25 0 17 0;#P connect 17 0 18 0;#P connect 29 0 28 0;#P connect 28 0 31 0;#P connect 9 0 6 0;#P connect 6 0 16 0;#P connect 10 0 16 0;#P connect 9 0 3 0;#P connect 3 0 24 0;#P connect 24 0 19 0;#P connect 19 0 10 0;#P connect 26 0 27 0;#P connect 27 0 32 0;#P connect 14 0 40 0;#P connect 45 0 40 0;#P connect 15 0 40 1;#P connect 46 0 40 1;#P connect 16 0 40 2;#P connect 47 0 40 2;#P connect 35 0 36 0;#P connect 36 0 11 0;#P connect 20 0 11 0;#P connect 11 0 40 3;#P connect 48 0 40 3;#P connect 36 0 20 0;#P connect 34 0 33 0;#P connect 33 0 37 0;#P pop;#P newobj 409 214 243 196622 patcher An_example_using_MSP;#P comment 5 75 372 196617 The arg3 (pbank 'name') is used by pbank in two ways: when a patch using a pbank is loaded \, a pbank data file corresponding to arg3 will be searched for and loaded if found. The 'name' also allows other pbanks with the same name to share data -in the way that tables do. If these two features are not wanted \, Arg3 (the 'name') can be set to the empty string: "" (two quotes) - see example below-;#P comment 67 144 275 196617 argument4 is the symbol that pbank uses when directing its output to receives based on this symbol: <optional symbol>;#P comment 5 193 330 196617 Arg4 is optional. If it is not specified \, Pbank's output will be sent out of its outlet. If arg4 is specified \, pbank's outlet will be inactive and output will be directed to a number of receive objects whose names are based on arg4 (receive symbol). For each column \, there is a corresponding receive whose name includes the column number -see example below.;#P pop;