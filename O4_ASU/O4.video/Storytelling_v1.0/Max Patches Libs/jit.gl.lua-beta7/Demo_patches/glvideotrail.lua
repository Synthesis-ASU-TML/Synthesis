render_context = this.drawtocurrent = 1vcount = 32vspacing = 1.vrotate = 0.vscale = 1.vbrightness = 2.aplanes = {}apos = {}arot = {}ascale = {}function recalc()	for i=1, vcount do		aplanes[i].color = {1., 1., 1., vbrightness/vcount}		apos[i] = {0., 0., (-vspacing/10)*(i-1)}		arot[i] = {vrotate*(i-1), 0., 0., 1.}		ascale[i] = {1.333*math.pow(vscale, (i-1)), math.pow(vscale, (i-1)), 1}	endendfunction count(c)	if(c < 1) then		c = 1	end		vcount = c	for i=1, vcount do		aplanes[i] = jit.new("jit.gl.videoplane", render_context)		aplanes[i].automatic = 0		aplanes[i].blend_enable = 1		aplanes[i].depth_enable = 0		aplanes[i].blend_mode = {6, 1}		aplanes[i].texture = "video"	end		recalc()endcount(32)local GL = glfunction draw()	---[[	local j = current		for i=1, vcount do		aplanes[j]:draw()				j = j - 1				if(j < 1) then			j = vcount		end	end	--]]endfunction jit_matrix(name)	aplanes[current]:jit_matrix(name)		local j = current		for i=1, vcount do		aplanes[j].position = apos[i]		aplanes[j].rotate = arot[i]		aplanes[j].scale = ascale[i]		j = j - 1				if(j < 1) then			j = vcount		end	end		current = current + 1		if(current > vcount) then		current = 1	endendfunction rotate(v)	vrotate = v	recalc()endfunction scale(v)	vscale = v	recalc()endfunction spacing(v)	vspacing = v	recalc()endfunction brightness(v)	vbrightness = v	recalc()end