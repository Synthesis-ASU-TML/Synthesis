max v2;#N vpatcher 350 102 636 443;#P origin 27 -15;#P newex 15 163 161 196617 expr sqrt($f1 * $f1 + $f2 * $f2);#N vpatcher 40 55 440 355;#P newex 45 67 27 196617 t f f;#P newex 66 136 27 196617 - 0.;#P outlet 40 187 15 0;#P inlet 45 45 15 0;#P fasten 2 0 1 0 71 163 45 163;#P connect 0 0 3 0;#P fasten 3 1 2 0 67 116 71 116;#P fasten 3 0 2 1 50 105 88 105;#P pop;#P newobj 76 140 38 196617 p delta;#N vpatcher 40 55 440 355;#P newex 45 67 27 196617 t f f;#P newex 66 136 27 196617 - 0.;#P outlet 40 187 15 0;#P inlet 45 45 15 0;#P fasten 2 0 1 0 71 163 45 163;#P connect 0 0 3 0;#P fasten 3 1 2 0 67 116 71 116;#P fasten 3 0 2 1 50 105 88 105;#P pop;#P newobj 15 122 38 196617 p delta;#P newex 15 100 74 196617 unpack 0. 0. 0.;#P newex 15 73 59 196617 r $1;#P newex 15 191 60 9 s $2;#P comment 5 301 260 196617 nik@f0.am - extracted to fit pseudo sensor framework;#P comment 6 223 257 196617 You may use \, modify and/or distribute under the terms of the GNU General Public License. Please see the LICENSE file for the specific terms of the license.;#P comment 6 265 204 196617 copyright 2001 yon vissel and FoAM vzw.;#P comment 6 284 162 196617 yon@proptronix.com - initial code;#P comment 14 41 253 196617 receives (x \, y position) and calculates speed in the visual plane (ie. across the floor);#P comment 14 10 100 196626 speed;#P connect 7 0 8 0;#P connect 8 0 9 0;#P fasten 9 0 11 0 20 149 20 149;#P connect 11 0 6 0;#P connect 8 1 10 0;#P fasten 10 0 11 1 81 160 171 160;#P pop;