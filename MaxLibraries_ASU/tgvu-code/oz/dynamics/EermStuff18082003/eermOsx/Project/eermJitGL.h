// eermJitGL.h//====================== Includes//#include "stdlib.h"//#include "jit.common.h"//#include "jit.gl.h"//#include "ext_strings.h"//#include <math.h>//#include "eerm.h"//====================== Definitionstypedef struct eermJitGL  // store a 3D projection in a GL-friendly fashion{	// Jit stuff:	t_object 	ob;	void 	*ob3d;	t_jit_glchunk *chunk;	long recalc;	char displaylist;	GLuint dlref;		// Eerm:	Eerm *e;			// Render Properties:	long GeomMode;	long Projection;	long ParticleSize;	long NumParticles;	} EermJitGL;void *EermJitGLClass;//====================== Methodst_jit_err EermJitGLInit(void);//---------------------- New / FreeEermJitGL *EermJitGLNew(t_symbol * dest_name);void EermJitGLFree(EermJitGL *g);//---------------------- Setvoid EermJitGLSetEerm(EermJitGL *g, Eerm *e);//--------------------- Max Methodst_jit_err	EermJitGLGeomMode(EermJitGL *g, void *attr, long argc, t_atom *argv);t_jit_err	EermJitGLProjection(EermJitGL *g, void *attr, long argc, t_atom *argv);t_jit_err	EermJitGLParticleSize(EermJitGL *g, void *attr, long argc, t_atom *argv);t_jit_err	EermJitGLDisplayList(EermJitGL *g, void *attr, long argc, t_atom *argv);//--------------------- JitGL Callbackst_jit_err EermJitGLDraw(EermJitGL *g);t_jit_err EermJitGLDestChanged(EermJitGL *g);t_jit_err EermJitGLGetColor(EermJitGL *g, float *red, float *green, float *blue, float *alpha);t_jit_err EermJitGLRecalc(EermJitGL *g);t_jit_err EermJitGLDestClosing(EermJitGL *g);//--------------------- Vertex Calculatorvoid EermJitGLCalc(EermJitGL *g);void EermJitGLColorSurface(EermJitGL *g);//--------------------- Draw Callback// should need more than one mode..void EermJitGLDrawNow(EermJitGL *g, GLenum mode); //===================== Message Symbolst_symbol *ps_projection, *ps_particlesize, *ps_numparticles;//=======//  EOF//=======