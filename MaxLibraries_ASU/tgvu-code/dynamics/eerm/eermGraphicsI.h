// eermGraphicsI.h//  inline header file providing a graphic//  presentation of the eerm.//====================== Includes#include "stdlib.h"#include "eermI.h"//====================== Definitionstypedef struct eermGraphics  // store a 3D projection in a GL-friendly fashion{	int nv;	float *v;		int ne;	float *e;		int nf;	float *f;	float *n;		int active;} EermGraphics;//====================== Methods//---------------------- New / FreeEermGraphics *EermGraphicsNew();void EermGraphicsFree(EermGraphics *g);//--------------------- Setvoid EermGraphicsSet();void EermGraphicsSetVertices();void EermGraphicsSetAttributeFoo();//--------------------- Embedding / Realizationvoid EermGraphicsFixProjection(EermGraphics *g, Eerm *e, int *dims);void EermGraphicsRandomEmbedding(EermGraphics *g, Eerm *e);//--------------------- Particlesvoid EermGraphicsUpdateTokens(EermGraphics *g, Eerm *e);//====================== Implementations//---------------------- New / FreeEermGraphics *EermGraphicsNew(){	MInvalid("not yet implemented");	return NULL;}void EermGraphicsFree(EermGraphics *g){	MAssertVoid(g != NULL, "bad graphics ptr");	MInvalid("not yet implemented");	return;}#endif